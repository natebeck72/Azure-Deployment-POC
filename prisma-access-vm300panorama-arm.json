{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
			"defaultValue": "[resourceGroup().location]",
			"type": "string"
		},
        "virtualMachines_firewall_name": {
            "defaultValue": "CHANGEMEpanfw",
            "type": "String"
        },
        "virtualMachines_panorama_name": {
            "defaultValue": "CHANGEMEpanorama",
            "type": "String"
        },
        "publicIPAddresses_firewallIP_name": {
            "defaultValue": "CHANGEMEpanfwmgmt",
            "type": "String"
        },
        "publicIPAddresses_firewalluntrustIP_name": {
            "defaultValue": "CHANGEMEpanfwuntrust",
            "type": "String"
        },
        "storageAccounts_diag_name": {
            "defaultValue": "CHANGEMEdiag",
            "type": "String"
        },
        "networkSecurityGroups_nsg_name": {
            "defaultValue": "CHANGEME_nsg",
            "type": "String"
        },
        "virtualNetworks_VNET_name": {
            "defaultValue": "CHANGEME_vnet",
            "type": "String"
        },
        "vnetAddressPrefix": {
        	"defaultValue": "172.20.0.0/16",
        	"type": "string"
        },
		"subnet1Name": {
			"defaultValue": "Mgmt",
			"type": "string"
		},
        "subnet1Prefix": {
        	"defaultValue": "172.20.0.0/24",
        	"type": "string"
        },
		"subnet2Name": {
			"defaultValue": "Untrust",
			"type": "string"
		},
        "subnet2Prefix": {
        	"defaultValue": "172.20.1.0/24",
        	"type": "string"
        },
		"subnet3Name": {
			"defaultValue": "Trust",
			"type": "string"
		},
        "subnet3Prefix": {
        	"defaultValue": "172.20.2.0/24",
        	"type": "string"
        },
        "networkInterfaces_fw_eth0_name": {
            "defaultValue": "fw-eth0",
            "type": "String"
        },
        "networkInterfaces_fw_eth1_name": {
            "defaultValue": "fw-eth1",
            "type": "String"
        },
        "networkInterfaces_fw_eth2_name": {
            "defaultValue": "fw-eth2",
            "type": "String"
        },
        "networkInterfaces_panomgmt_name": {
            "defaultValue": "panoramamgmt",
            "type": "String"
        },
        "adminUsername": {
            "defaultValue": "",
            "type": "String"
        },
        "adminPassword": {
            "defaultValue": "",
            "type": "SecureString"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkSecurityGroups_nsg_name')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-Outside-From-IP",
                        "properties": {
                            "description": "Rule",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "0.0.0.0/0",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Allow-Intra",
                        "properties": {
                            "description": "Allow intra network traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('vnetAddressPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Default-Deny",
                        "properties": {
                            "description": "Default-Deny if we don't match Allow rule",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 200,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-05-01",
            "name": "[parameters('publicIPAddresses_firewallIP_name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[parameters('publicIPAddresses_firewallIP_name')]",
                    "fqdn": "[concat(parameters('publicIPAddresses_firewallIP_name'), '.', parameters('location'), '.', 'cloudapp.azure.com')]"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-05-01",
            "name": "[parameters('publicIPAddresses_firewalluntrustIP_name')]",
            "location": "[parameters('location')]",
            "tags": {
                "RunStatus": "NOSTOP",
                "StoreStatus": "DND"
            },
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[parameters('publicIPAddresses_firewalluntrustIP_name')]",
                    "fqdn": "[concat(parameters('publicIPAddresses_firewalluntrustIP_name'), parameters('location'), '.', 'cloudapp.azure.com')]"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccounts_diag_name')]",
            "location": "[parameters('location')]",
            "tags": {
                "RunStatus": "NOSTOP",
                "StoreStatus": "DND"
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_diag_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_diag_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_diag_name'), '/default/bootdiagnostics')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_diag_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_diag_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_diag_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_diag_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-05-01",
            "name": "internal_routetable",
            "location": "[parameters('location')]",
            "properties": {
            	"disableBgpRoutePropagation": false,
            	"routes": [
            		{
            			"name": "default",
            			"properties": {
            				"addressPrefix": "0.0.0.0/0",
            				"nextHopType": "VirtualAppliance",
            				"nextHopIpAddress": "[concat(substring(parameters('subnet3Prefix'),0,sub(length(parameters('subnet3Prefix')), 4)), '4')]"
            			}
            		}
            	]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-05-01",
            "name": "external_routetable",
            "location": "[parameters('location')]",
            "properties": {
            	"disableBgpRoutePropagation": false,
            	"routes": [
            		{
            			"name": "default",
            			"properties": {
            				"addressPrefix": "0.0.0.0/0",
            				"nextHopType": "Internet"
            			}
            		}
            	]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('virtualNetworks_VNET_name')]",
            "location": "[parameters('location')]",
            "properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[parameters('vnetAddressPrefix')]"
                	]
                }
            },
            "resources": [
            	{
            		"type": "subnets",
            		"apiVersion": "2020-05-01",
            		"location": "[parameters('location')]",
					"name": "[parameters('subnet1Name')]",
					"dependsOn": [
						"[parameters('virtualNetworks_VNET_name')]"
					],
					"properties": {
						"addressPrefix": "[parameters('subnet1Prefix')]",
						"networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_name'))]"
                            }
					}
				},
				{
            		"type": "subnets",
            		"apiVersion": "2020-05-01",
            		"location": "[parameters('location')]",
					"name": "[parameters('subnet2Name')]",
					"dependsOn": [
						"[parameters('virtualNetworks_VNET_name')]",
						"[parameters('subnet1Name')]"
					],
					"properties": {
						"addressPrefix": "[parameters('subnet2Prefix')]",
						"networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_name'))]"
                        },
                        "routeTable": {
                        	"id": "[resourceId('Microsoft.Network/routeTables', 'external_routetable')]"
                        }
					}
				},
				{
            		"type": "subnets",
            		"apiVersion": "2020-05-01",
            		"location": "[parameters('location')]",
					"name": "[parameters('subnet3Name')]",
					"dependsOn": [
						"[parameters('virtualNetworks_VNET_name')]",
						"[parameters('subnet1Name')]",
						"[parameters('subnet2Name')]"
					],
					"properties": {
						"addressPrefix": "[parameters('subnet3Prefix')]",
						"networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_name'))]"
                        },
                        "routeTable": {
                        	"id": "[resourceId('Microsoft.Network/routeTables', 'internal_routetable')]"
                        }
					}
				}
			]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkInterfaces_fw_eth0_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_firewallIP_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNET_name'), parameters('subnet1Name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig-mgmt",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_firewallIP_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNET_name'), parameters('subnet1Name'))]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkInterfaces_fw_eth1_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNET_name'), parameters('subnet2Name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig-untrust",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_firewalluntrustIP_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNET_name'), parameters('subnet2Name'))]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": true,
                "enableIPForwarding": true
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkInterfaces_fw_eth2_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNET_name'), parameters('subnet3Name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig-trust",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNET_name'), parameters('subnet3Name'))]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": true,
                "enableIPForwarding": true
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkInterfaces_panomgmt_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNET_name'), parameters('subnet3Name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_name'))]"
            ],
            "tags": {
                "RunStatus": "NOSTOP",
                "StoreStatus": "DND"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNET_name'), parameters('subnet3Name'))]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-12-01",
            "name": "[parameters('virtualMachines_firewall_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_fw_eth0_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_fw_eth1_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_fw_eth2_name'))]"
            ],
            "plan": {
                "name": "byol",
                "product": "vmseries-flex",
                "publisher": "paloaltonetworks"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_DS3_v2"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "paloaltonetworks",
                        "offer": "vmseries-flex",
                        "sku": "byol",
                        "version": "10.1.3"
                    }
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_firewall_name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_fw_eth0_name'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_fw_eth1_name'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_fw_eth2_name'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-12-01",
            "name": "[parameters('virtualMachines_panorama_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_panomgmt_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_diag_name'))]"
            ],
            "tags": {
                "RunStatus": "NOSTOP",
                "StoreStatus": "DND"
            },
            "plan": {
                "name": "byol",
                "product": "panorama",
                "publisher": "paloaltonetworks"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D4_v2"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "paloaltonetworks",
                        "offer": "panorama",
                        "sku": "byol",
                        "version": "10.1.3"
                    }
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_panorama_name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_panomgmt_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('storageAccounts_diag_name'), '.blob.core.windows.net/')]"
                    }
                }
            }
        }
    ]
}